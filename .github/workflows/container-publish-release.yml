name: 'Docker: Publish release image'

on:
  push:
    tags:
      - '*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
#  DOCKERHUB_REPO: processone/eturnal

jobs:
  build-x86-64:
    name: x86-64 - Build & publish release image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tags for build arguments
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=0`)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}-r0-x86-64
            type=semver,pattern={{version}}-x86-64
            type=semver,pattern={{major}}.{{minor}}-x86-64
            type=semver,pattern={{major}}-x86-64
            latest-x86-64
          flavor: |
            latest=false
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ env.TAG_VERSION }}
            REPOSITORY=https://github.com/${{ github.repository }}.git
          context: docker-k8s/image/.
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  build-i386:
    name: i386 - Build & publish release image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tags for build arguments
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=0`)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}-r0-i386
            type=semver,pattern={{version}}-i386
            type=semver,pattern={{major}}.{{minor}}-i386
            type=semver,pattern={{major}}-i386
            latest-i386
          flavor: |
            latest=false
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ env.TAG_VERSION }}
            REPOSITORY=https://github.com/${{ github.repository }}.git
          context: docker-k8s/image/.
          platforms: linux/386
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-aarch64:
    name: aarch64 - Build & publish release image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tags for build arguments
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=0`)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}-r0-aarch64
            type=semver,pattern={{version}}-aarch64
            type=semver,pattern={{major}}.{{minor}}-aarch64
            type=semver,pattern={{major}}-aarch64
            latest-aarch64
          flavor: |
            latest=false
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ env.TAG_VERSION }}
            REPOSITORY=https://github.com/${{ github.repository }}.git
          context: docker-k8s/image/.
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-armv7:
    name: armv7 - Build & publish release image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tags for build arguments
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=0`)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}-r0-armv7
            type=semver,pattern={{version}}-armv7
            type=semver,pattern={{major}}.{{minor}}-armv7
            type=semver,pattern={{major}}-armv7
            latest-armv7
          flavor: |
            latest=false
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ env.TAG_VERSION }}
            REPOSITORY=https://github.com/${{ github.repository }}.git
          context: docker-k8s/image/.
          platforms: linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-armhf:
    name: armhf - Build & publish release image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tags for build arguments
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=0`)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}-r0-armhf
            type=semver,pattern={{version}}-armhf
            type=semver,pattern={{major}}.{{minor}}-armhf
            type=semver,pattern={{major}}-armhf
            latest-armhf
          flavor: |
            latest=false
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ env.TAG_VERSION }}
            REPOSITORY=https://github.com/${{ github.repository }}.git
          context: docker-k8s/image/.
          platforms: linux/arm/v6
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-ppc64le:
    name: ppc64le - Build & publish release image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tags for build arguments
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=0`)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}-r0-ppc64le
            type=semver,pattern={{version}}-ppc64le
            type=semver,pattern={{major}}.{{minor}}-ppc64le
            type=semver,pattern={{major}}-ppc64le
            latest-ppc64le
          flavor: |
            latest=false
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ env.TAG_VERSION }}
            REPOSITORY=https://github.com/${{ github.repository }}.git
          context: docker-k8s/image/.
          platforms: linux/ppc64le
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-s390x:
    name: s390x - Build & publish release image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tags for build arguments
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=0`)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}-r0-s390x
            type=semver,pattern={{version}}-s390x
            type=semver,pattern={{major}}.{{minor}}-s390x
            type=semver,pattern={{major}}-s390x
            latest-s390x
          flavor: |
            latest=false
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ env.TAG_VERSION }}
            REPOSITORY=https://github.com/${{ github.repository }}.git
          context: docker-k8s/image/.
          platforms: linux/s390x
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-manifest:
    name: Publish image manifest
    runs-on: ubuntu-latest
    needs: [build-x86-64, build-i386, build-aarch64, build-armv7, build-armhf, build-ppc64le, build-s390x]    
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      -
        name: Check out master
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Extract tag of latest release
        run: |
          echo "TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV
      -
        name: Extract major/ minor release tags
        run: |
          echo "TAG_MINOR=$(echo "$TAG_VERSION" | sed 's/\./ /2' | awk '{ print $1 }')" >> $GITHUB_ENV
          echo "TAG_MAJOR=$(echo "$TAG_VERSION" | sed 's/\./ /1' | awk '{ print $1 }')" >> $GITHUB_ENV
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        name: Log in to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Merge and publish
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-r0 \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }} \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_MINOR }} \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_MAJOR }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-x86-64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-i386 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-aarch64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-armv7 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-armhf \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-ppc64le \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}-s390x
#          docker buildx imagetools create \
#            --tag ${{ env.DOCKERHUB_REPO }}:latest \
#            --tag ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-r0 \
#            --tag ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }} \
#            --tag ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_MINOR }} \
#            --tag ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_MAJOR }} \
#              ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-x86-64 \
#              ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-i386 \
#              ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-aarch64 \
#              ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-armv7 \
#              ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-armhf \
#              ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-ppc64le \
#              ${{ env.DOCKERHUB_REPO }}:${{ env.TAG_VERSION }}-s390x